Dump of assembler code for function main:
   0x08048804 <+0>:	lea    ecx,[esp+0x4]
   0x08048808 <+4>:	and    esp,0xfffffff0
   0x0804880b <+7>:	push   DWORD PTR [ecx-0x4]
   0x0804880e <+10>:	push   ebp
   0x0804880f <+11>:	mov    ebp,esp
   0x08048811 <+13>:	push   ebx
   0x08048812 <+14>:	push   ecx
   0x08048813 <+15>:	sub    esp,0x10

; make an instance of MyClass1
   0x08048816 <+18>:	sub    esp,0xc
   0x08048819 <+21>:	push   0x24
   0x0804881b <+23>:	call   0x8048610 <_Znwj@plt>
   0x08048820 <+28>:	add    esp,0x10
   0x08048823 <+31>:	mov    ebx,eax
   0x08048825 <+33>:	sub    esp,0xc
   0x08048828 <+36>:	push   ebx
   0x08048829 <+37>:	call   0x80489de <_ZN8MyClass1C2Ev>
   0x0804882e <+42>:	add    esp,0x10
   0x08048831 <+45>:	mov    DWORD PTR [ebp-0x14],ebx

; make an instance of MyClass2
   0x08048834 <+48>:	sub    esp,0xc
   0x08048837 <+51>:	push   0x24
   0x08048839 <+53>:	call   0x8048610 <_Znwj@plt>
   0x0804883e <+58>:	add    esp,0x10
   0x08048841 <+61>:	mov    ebx,eax
   0x08048843 <+63>:	sub    esp,0xc
   0x08048846 <+66>:	push   ebx
   0x08048847 <+67>:	call   0x8048a00 <_ZN8MyClass2C2Ev>
   0x0804884c <+72>:	add    esp,0x10
   0x0804884f <+75>:	mov    DWORD PTR [ebp-0x10],ebx

   0x08048852 <+78>:	mov    eax,DWORD PTR [ebp-0x14]
   0x08048855 <+81>:	sub    esp,0x4

; 3rd. SetBuffer arg. (0x20 = 32)
   0x08048858 <+84>:	push   0x20

; 2nd. SetBuffer arg. (0x4 = 4)
   0x0804885a <+86>:	push   0x4

; 1st. SetBuffer arg. (char* returned from bufferOverflow)
   0x0804885c <+88>:	push   eax
   0x0804885d <+89>:	call   0x804875b <_Z14bufferOverflowmii>
   0x08048862 <+94>:	add    esp,0x10
   0x08048865 <+97>:	mov    edx,eax
   0x08048867 <+99>:	mov    eax,DWORD PTR [ebp-0x14]

; call SetBuffer method on objects[0]
   0x0804886a <+102>:	sub    esp,0x8
   0x0804886d <+105>:	push   edx
   0x0804886e <+106>:	push   eax
   0x0804886f <+107>:	call   0x8048944 <_ZN9BaseClass9SetBufferEPKc>

; call SetBuffer method on objects[1]
   0x08048874 <+112>:	add    esp,0x10
   0x08048877 <+115>:	mov    eax,DWORD PTR [ebp-0x10]
   0x0804887a <+118>:	sub    esp,0x8
   0x0804887d <+121>:	push   0x8048ac7
   0x08048882 <+126>:	push   eax
   0x08048883 <+127>:	call   0x8048944 <_ZN9BaseClass9SetBufferEPKc>
   0x08048888 <+132>:	add    esp,0x10

; call PrintBuffer method on objects[0]
   0x0804888b <+135>:	mov    eax,DWORD PTR [ebp-0x14]
   0x0804888e <+138>:	mov    eax,DWORD PTR [eax]
   0x08048890 <+140>:	mov    eax,DWORD PTR [eax]
   0x08048892 <+142>:	mov    edx,DWORD PTR [ebp-0x14]
   0x08048895 <+145>:	sub    esp,0xc
   0x08048898 <+148>:	push   edx
   0x08048899 <+149>:	call   eax
   0x0804889b <+151>:	add    esp,0x10

; call PrintBuffer method on objects[1]
   0x0804889e <+154>:	mov    eax,DWORD PTR [ebp-0x10]
   0x080488a1 <+157>:	mov    eax,DWORD PTR [eax]
   0x080488a3 <+159>:	mov    eax,DWORD PTR [eax]
   0x080488a5 <+161>:	mov    edx,DWORD PTR [ebp-0x10]
   0x080488a8 <+164>:	sub    esp,0xc
   0x080488ab <+167>:	push   edx
   0x080488ac <+168>:	call   eax
   0x080488ae <+170>:	add    esp,0x10

; dealloc loop
   0x080488b1 <+173>:	mov    DWORD PTR [ebp-0xc],0x0
   0x080488b8 <+180>:	cmp    DWORD PTR [ebp-0xc],0x1
   0x080488bc <+184>:	jg     0x80488d9 <main+213>
   0x080488be <+186>:	mov    eax,DWORD PTR [ebp-0xc]
   0x080488c1 <+189>:	mov    eax,DWORD PTR [ebp+eax*4-0x14]
   0x080488c5 <+193>:	sub    esp,0x8
   0x080488c8 <+196>:	push   0x24
   0x080488ca <+198>:	push   eax
   0x080488cb <+199>:	call   0x8048630 <_ZdlPvj@plt>
   0x080488d0 <+204>:	add    esp,0x10
   0x080488d3 <+207>:	add    DWORD PTR [ebp-0xc],0x1
   0x080488d7 <+211>:	jmp    0x80488b8 <main+180>

; exit
   0x080488d9 <+213>:	mov    eax,0x0
   0x080488de <+218>:	lea    esp,[ebp-0x8]
   0x080488e1 <+221>:	pop    ecx
   0x080488e2 <+222>:	pop    ebx
   0x080488e3 <+223>:	pop    ebp
   0x080488e4 <+224>:	lea    esp,[ecx-0x4]
   0x080488e7 <+227>:	ret    
End of assembler dump.
